package com.woniu.housemanager.pojo;

import java.util.ArrayList;
import java.util.List;

public class LouPanManagerExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table loupanmanger
     *
     * @mbggenerated Sun Jun 07 17:07:39 CST 2020
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table loupanmanger
     *
     * @mbggenerated Sun Jun 07 17:07:39 CST 2020
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table loupanmanger
     *
     * @mbggenerated Sun Jun 07 17:07:39 CST 2020
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table loupanmanger
     *
     * @mbggenerated Sun Jun 07 17:07:39 CST 2020
     */
    public LouPanManagerExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table loupanmanger
     *
     * @mbggenerated Sun Jun 07 17:07:39 CST 2020
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table loupanmanger
     *
     * @mbggenerated Sun Jun 07 17:07:39 CST 2020
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table loupanmanger
     *
     * @mbggenerated Sun Jun 07 17:07:39 CST 2020
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table loupanmanger
     *
     * @mbggenerated Sun Jun 07 17:07:39 CST 2020
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table loupanmanger
     *
     * @mbggenerated Sun Jun 07 17:07:39 CST 2020
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table loupanmanger
     *
     * @mbggenerated Sun Jun 07 17:07:39 CST 2020
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table loupanmanger
     *
     * @mbggenerated Sun Jun 07 17:07:39 CST 2020
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table loupanmanger
     *
     * @mbggenerated Sun Jun 07 17:07:39 CST 2020
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table loupanmanger
     *
     * @mbggenerated Sun Jun 07 17:07:39 CST 2020
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table loupanmanger
     *
     * @mbggenerated Sun Jun 07 17:07:39 CST 2020
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table loupanmanger
     *
     * @mbggenerated Sun Jun 07 17:07:39 CST 2020
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andLoupanmanagerIsNull() {
            addCriterion("loupanmanager is null");
            return (Criteria) this;
        }

        public Criteria andLoupanmanagerIsNotNull() {
            addCriterion("loupanmanager is not null");
            return (Criteria) this;
        }

        public Criteria andLoupanmanagerEqualTo(String value) {
            addCriterion("loupanmanager =", value, "loupanmanager");
            return (Criteria) this;
        }

        public Criteria andLoupanmanagerNotEqualTo(String value) {
            addCriterion("loupanmanager <>", value, "loupanmanager");
            return (Criteria) this;
        }

        public Criteria andLoupanmanagerGreaterThan(String value) {
            addCriterion("loupanmanager >", value, "loupanmanager");
            return (Criteria) this;
        }

        public Criteria andLoupanmanagerGreaterThanOrEqualTo(String value) {
            addCriterion("loupanmanager >=", value, "loupanmanager");
            return (Criteria) this;
        }

        public Criteria andLoupanmanagerLessThan(String value) {
            addCriterion("loupanmanager <", value, "loupanmanager");
            return (Criteria) this;
        }

        public Criteria andLoupanmanagerLessThanOrEqualTo(String value) {
            addCriterion("loupanmanager <=", value, "loupanmanager");
            return (Criteria) this;
        }

        public Criteria andLoupanmanagerLike(String value) {
            addCriterion("loupanmanager like", value, "loupanmanager");
            return (Criteria) this;
        }

        public Criteria andLoupanmanagerNotLike(String value) {
            addCriterion("loupanmanager not like", value, "loupanmanager");
            return (Criteria) this;
        }

        public Criteria andLoupanmanagerIn(List<String> values) {
            addCriterion("loupanmanager in", values, "loupanmanager");
            return (Criteria) this;
        }

        public Criteria andLoupanmanagerNotIn(List<String> values) {
            addCriterion("loupanmanager not in", values, "loupanmanager");
            return (Criteria) this;
        }

        public Criteria andLoupanmanagerBetween(String value1, String value2) {
            addCriterion("loupanmanager between", value1, value2, "loupanmanager");
            return (Criteria) this;
        }

        public Criteria andLoupanmanagerNotBetween(String value1, String value2) {
            addCriterion("loupanmanager not between", value1, value2, "loupanmanager");
            return (Criteria) this;
        }

        public Criteria andDiidIsNull() {
            addCriterion("diid is null");
            return (Criteria) this;
        }

        public Criteria andDiidIsNotNull() {
            addCriterion("diid is not null");
            return (Criteria) this;
        }

        public Criteria andDiidEqualTo(Integer value) {
            addCriterion("diid =", value, "diid");
            return (Criteria) this;
        }

        public Criteria andDiidNotEqualTo(Integer value) {
            addCriterion("diid <>", value, "diid");
            return (Criteria) this;
        }

        public Criteria andDiidGreaterThan(Integer value) {
            addCriterion("diid >", value, "diid");
            return (Criteria) this;
        }

        public Criteria andDiidGreaterThanOrEqualTo(Integer value) {
            addCriterion("diid >=", value, "diid");
            return (Criteria) this;
        }

        public Criteria andDiidLessThan(Integer value) {
            addCriterion("diid <", value, "diid");
            return (Criteria) this;
        }

        public Criteria andDiidLessThanOrEqualTo(Integer value) {
            addCriterion("diid <=", value, "diid");
            return (Criteria) this;
        }

        public Criteria andDiidIn(List<Integer> values) {
            addCriterion("diid in", values, "diid");
            return (Criteria) this;
        }

        public Criteria andDiidNotIn(List<Integer> values) {
            addCriterion("diid not in", values, "diid");
            return (Criteria) this;
        }

        public Criteria andDiidBetween(Integer value1, Integer value2) {
            addCriterion("diid between", value1, value2, "diid");
            return (Criteria) this;
        }

        public Criteria andDiidNotBetween(Integer value1, Integer value2) {
            addCriterion("diid not between", value1, value2, "diid");
            return (Criteria) this;
        }

        public Criteria andBuildingidIsNull() {
            addCriterion("buildingid is null");
            return (Criteria) this;
        }

        public Criteria andBuildingidIsNotNull() {
            addCriterion("buildingid is not null");
            return (Criteria) this;
        }

        public Criteria andBuildingidEqualTo(Integer value) {
            addCriterion("buildingid =", value, "buildingid");
            return (Criteria) this;
        }

        public Criteria andBuildingidNotEqualTo(Integer value) {
            addCriterion("buildingid <>", value, "buildingid");
            return (Criteria) this;
        }

        public Criteria andBuildingidGreaterThan(Integer value) {
            addCriterion("buildingid >", value, "buildingid");
            return (Criteria) this;
        }

        public Criteria andBuildingidGreaterThanOrEqualTo(Integer value) {
            addCriterion("buildingid >=", value, "buildingid");
            return (Criteria) this;
        }

        public Criteria andBuildingidLessThan(Integer value) {
            addCriterion("buildingid <", value, "buildingid");
            return (Criteria) this;
        }

        public Criteria andBuildingidLessThanOrEqualTo(Integer value) {
            addCriterion("buildingid <=", value, "buildingid");
            return (Criteria) this;
        }

        public Criteria andBuildingidIn(List<Integer> values) {
            addCriterion("buildingid in", values, "buildingid");
            return (Criteria) this;
        }

        public Criteria andBuildingidNotIn(List<Integer> values) {
            addCriterion("buildingid not in", values, "buildingid");
            return (Criteria) this;
        }

        public Criteria andBuildingidBetween(Integer value1, Integer value2) {
            addCriterion("buildingid between", value1, value2, "buildingid");
            return (Criteria) this;
        }

        public Criteria andBuildingidNotBetween(Integer value1, Integer value2) {
            addCriterion("buildingid not between", value1, value2, "buildingid");
            return (Criteria) this;
        }

        public Criteria andPspidIsNull() {
            addCriterion("pspid is null");
            return (Criteria) this;
        }

        public Criteria andPspidIsNotNull() {
            addCriterion("pspid is not null");
            return (Criteria) this;
        }

        public Criteria andPspidEqualTo(Integer value) {
            addCriterion("pspid =", value, "pspid");
            return (Criteria) this;
        }

        public Criteria andPspidNotEqualTo(Integer value) {
            addCriterion("pspid <>", value, "pspid");
            return (Criteria) this;
        }

        public Criteria andPspidGreaterThan(Integer value) {
            addCriterion("pspid >", value, "pspid");
            return (Criteria) this;
        }

        public Criteria andPspidGreaterThanOrEqualTo(Integer value) {
            addCriterion("pspid >=", value, "pspid");
            return (Criteria) this;
        }

        public Criteria andPspidLessThan(Integer value) {
            addCriterion("pspid <", value, "pspid");
            return (Criteria) this;
        }

        public Criteria andPspidLessThanOrEqualTo(Integer value) {
            addCriterion("pspid <=", value, "pspid");
            return (Criteria) this;
        }

        public Criteria andPspidIn(List<Integer> values) {
            addCriterion("pspid in", values, "pspid");
            return (Criteria) this;
        }

        public Criteria andPspidNotIn(List<Integer> values) {
            addCriterion("pspid not in", values, "pspid");
            return (Criteria) this;
        }

        public Criteria andPspidBetween(Integer value1, Integer value2) {
            addCriterion("pspid between", value1, value2, "pspid");
            return (Criteria) this;
        }

        public Criteria andPspidNotBetween(Integer value1, Integer value2) {
            addCriterion("pspid not between", value1, value2, "pspid");
            return (Criteria) this;
        }

        public Criteria andLoupanstatusIsNull() {
            addCriterion("loupanstatus is null");
            return (Criteria) this;
        }

        public Criteria andLoupanstatusIsNotNull() {
            addCriterion("loupanstatus is not null");
            return (Criteria) this;
        }

        public Criteria andLoupanstatusEqualTo(String value) {
            addCriterion("loupanstatus =", value, "loupanstatus");
            return (Criteria) this;
        }

        public Criteria andLoupanstatusNotEqualTo(String value) {
            addCriterion("loupanstatus <>", value, "loupanstatus");
            return (Criteria) this;
        }

        public Criteria andLoupanstatusGreaterThan(String value) {
            addCriterion("loupanstatus >", value, "loupanstatus");
            return (Criteria) this;
        }

        public Criteria andLoupanstatusGreaterThanOrEqualTo(String value) {
            addCriterion("loupanstatus >=", value, "loupanstatus");
            return (Criteria) this;
        }

        public Criteria andLoupanstatusLessThan(String value) {
            addCriterion("loupanstatus <", value, "loupanstatus");
            return (Criteria) this;
        }

        public Criteria andLoupanstatusLessThanOrEqualTo(String value) {
            addCriterion("loupanstatus <=", value, "loupanstatus");
            return (Criteria) this;
        }

        public Criteria andLoupanstatusLike(String value) {
            addCriterion("loupanstatus like", value, "loupanstatus");
            return (Criteria) this;
        }

        public Criteria andLoupanstatusNotLike(String value) {
            addCriterion("loupanstatus not like", value, "loupanstatus");
            return (Criteria) this;
        }

        public Criteria andLoupanstatusIn(List<String> values) {
            addCriterion("loupanstatus in", values, "loupanstatus");
            return (Criteria) this;
        }

        public Criteria andLoupanstatusNotIn(List<String> values) {
            addCriterion("loupanstatus not in", values, "loupanstatus");
            return (Criteria) this;
        }

        public Criteria andLoupanstatusBetween(String value1, String value2) {
            addCriterion("loupanstatus between", value1, value2, "loupanstatus");
            return (Criteria) this;
        }

        public Criteria andLoupanstatusNotBetween(String value1, String value2) {
            addCriterion("loupanstatus not between", value1, value2, "loupanstatus");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table loupanmanger
     *
     * @mbggenerated do_not_delete_during_merge Sun Jun 07 17:07:39 CST 2020
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table loupanmanger
     *
     * @mbggenerated Sun Jun 07 17:07:39 CST 2020
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}