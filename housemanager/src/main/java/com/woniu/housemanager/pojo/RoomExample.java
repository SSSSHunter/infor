package com.woniu.housemanager.pojo;

import java.util.ArrayList;
import java.util.List;

public class RoomExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table room
     *
     * @mbggenerated Sun Jun 07 17:07:39 CST 2020
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table room
     *
     * @mbggenerated Sun Jun 07 17:07:39 CST 2020
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table room
     *
     * @mbggenerated Sun Jun 07 17:07:39 CST 2020
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table room
     *
     * @mbggenerated Sun Jun 07 17:07:39 CST 2020
     */
    public RoomExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table room
     *
     * @mbggenerated Sun Jun 07 17:07:39 CST 2020
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table room
     *
     * @mbggenerated Sun Jun 07 17:07:39 CST 2020
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table room
     *
     * @mbggenerated Sun Jun 07 17:07:39 CST 2020
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table room
     *
     * @mbggenerated Sun Jun 07 17:07:39 CST 2020
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table room
     *
     * @mbggenerated Sun Jun 07 17:07:39 CST 2020
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table room
     *
     * @mbggenerated Sun Jun 07 17:07:39 CST 2020
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table room
     *
     * @mbggenerated Sun Jun 07 17:07:39 CST 2020
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table room
     *
     * @mbggenerated Sun Jun 07 17:07:39 CST 2020
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table room
     *
     * @mbggenerated Sun Jun 07 17:07:39 CST 2020
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table room
     *
     * @mbggenerated Sun Jun 07 17:07:39 CST 2020
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table room
     *
     * @mbggenerated Sun Jun 07 17:07:39 CST 2020
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andRoomidIsNull() {
            addCriterion("roomid is null");
            return (Criteria) this;
        }

        public Criteria andRoomidIsNotNull() {
            addCriterion("roomid is not null");
            return (Criteria) this;
        }

        public Criteria andRoomidEqualTo(Integer value) {
            addCriterion("roomid =", value, "roomid");
            return (Criteria) this;
        }

        public Criteria andRoomidNotEqualTo(Integer value) {
            addCriterion("roomid <>", value, "roomid");
            return (Criteria) this;
        }

        public Criteria andRoomidGreaterThan(Integer value) {
            addCriterion("roomid >", value, "roomid");
            return (Criteria) this;
        }

        public Criteria andRoomidGreaterThanOrEqualTo(Integer value) {
            addCriterion("roomid >=", value, "roomid");
            return (Criteria) this;
        }

        public Criteria andRoomidLessThan(Integer value) {
            addCriterion("roomid <", value, "roomid");
            return (Criteria) this;
        }

        public Criteria andRoomidLessThanOrEqualTo(Integer value) {
            addCriterion("roomid <=", value, "roomid");
            return (Criteria) this;
        }

        public Criteria andRoomidIn(List<Integer> values) {
            addCriterion("roomid in", values, "roomid");
            return (Criteria) this;
        }

        public Criteria andRoomidNotIn(List<Integer> values) {
            addCriterion("roomid not in", values, "roomid");
            return (Criteria) this;
        }

        public Criteria andRoomidBetween(Integer value1, Integer value2) {
            addCriterion("roomid between", value1, value2, "roomid");
            return (Criteria) this;
        }

        public Criteria andRoomidNotBetween(Integer value1, Integer value2) {
            addCriterion("roomid not between", value1, value2, "roomid");
            return (Criteria) this;
        }

        public Criteria andLayeridIsNull() {
            addCriterion("layerid is null");
            return (Criteria) this;
        }

        public Criteria andLayeridIsNotNull() {
            addCriterion("layerid is not null");
            return (Criteria) this;
        }

        public Criteria andLayeridEqualTo(Integer value) {
            addCriterion("layerid =", value, "layerid");
            return (Criteria) this;
        }

        public Criteria andLayeridNotEqualTo(Integer value) {
            addCriterion("layerid <>", value, "layerid");
            return (Criteria) this;
        }

        public Criteria andLayeridGreaterThan(Integer value) {
            addCriterion("layerid >", value, "layerid");
            return (Criteria) this;
        }

        public Criteria andLayeridGreaterThanOrEqualTo(Integer value) {
            addCriterion("layerid >=", value, "layerid");
            return (Criteria) this;
        }

        public Criteria andLayeridLessThan(Integer value) {
            addCriterion("layerid <", value, "layerid");
            return (Criteria) this;
        }

        public Criteria andLayeridLessThanOrEqualTo(Integer value) {
            addCriterion("layerid <=", value, "layerid");
            return (Criteria) this;
        }

        public Criteria andLayeridIn(List<Integer> values) {
            addCriterion("layerid in", values, "layerid");
            return (Criteria) this;
        }

        public Criteria andLayeridNotIn(List<Integer> values) {
            addCriterion("layerid not in", values, "layerid");
            return (Criteria) this;
        }

        public Criteria andLayeridBetween(Integer value1, Integer value2) {
            addCriterion("layerid between", value1, value2, "layerid");
            return (Criteria) this;
        }

        public Criteria andLayeridNotBetween(Integer value1, Integer value2) {
            addCriterion("layerid not between", value1, value2, "layerid");
            return (Criteria) this;
        }

        public Criteria andHsidIsNull() {
            addCriterion("hsid is null");
            return (Criteria) this;
        }

        public Criteria andHsidIsNotNull() {
            addCriterion("hsid is not null");
            return (Criteria) this;
        }

        public Criteria andHsidEqualTo(Integer value) {
            addCriterion("hsid =", value, "hsid");
            return (Criteria) this;
        }

        public Criteria andHsidNotEqualTo(Integer value) {
            addCriterion("hsid <>", value, "hsid");
            return (Criteria) this;
        }

        public Criteria andHsidGreaterThan(Integer value) {
            addCriterion("hsid >", value, "hsid");
            return (Criteria) this;
        }

        public Criteria andHsidGreaterThanOrEqualTo(Integer value) {
            addCriterion("hsid >=", value, "hsid");
            return (Criteria) this;
        }

        public Criteria andHsidLessThan(Integer value) {
            addCriterion("hsid <", value, "hsid");
            return (Criteria) this;
        }

        public Criteria andHsidLessThanOrEqualTo(Integer value) {
            addCriterion("hsid <=", value, "hsid");
            return (Criteria) this;
        }

        public Criteria andHsidIn(List<Integer> values) {
            addCriterion("hsid in", values, "hsid");
            return (Criteria) this;
        }

        public Criteria andHsidNotIn(List<Integer> values) {
            addCriterion("hsid not in", values, "hsid");
            return (Criteria) this;
        }

        public Criteria andHsidBetween(Integer value1, Integer value2) {
            addCriterion("hsid between", value1, value2, "hsid");
            return (Criteria) this;
        }

        public Criteria andHsidNotBetween(Integer value1, Integer value2) {
            addCriterion("hsid not between", value1, value2, "hsid");
            return (Criteria) this;
        }

        public Criteria andRoomareaIsNull() {
            addCriterion("roomarea is null");
            return (Criteria) this;
        }

        public Criteria andRoomareaIsNotNull() {
            addCriterion("roomarea is not null");
            return (Criteria) this;
        }

        public Criteria andRoomareaEqualTo(Long value) {
            addCriterion("roomarea =", value, "roomarea");
            return (Criteria) this;
        }

        public Criteria andRoomareaNotEqualTo(Long value) {
            addCriterion("roomarea <>", value, "roomarea");
            return (Criteria) this;
        }

        public Criteria andRoomareaGreaterThan(Long value) {
            addCriterion("roomarea >", value, "roomarea");
            return (Criteria) this;
        }

        public Criteria andRoomareaGreaterThanOrEqualTo(Long value) {
            addCriterion("roomarea >=", value, "roomarea");
            return (Criteria) this;
        }

        public Criteria andRoomareaLessThan(Long value) {
            addCriterion("roomarea <", value, "roomarea");
            return (Criteria) this;
        }

        public Criteria andRoomareaLessThanOrEqualTo(Long value) {
            addCriterion("roomarea <=", value, "roomarea");
            return (Criteria) this;
        }

        public Criteria andRoomareaIn(List<Long> values) {
            addCriterion("roomarea in", values, "roomarea");
            return (Criteria) this;
        }

        public Criteria andRoomareaNotIn(List<Long> values) {
            addCriterion("roomarea not in", values, "roomarea");
            return (Criteria) this;
        }

        public Criteria andRoomareaBetween(Long value1, Long value2) {
            addCriterion("roomarea between", value1, value2, "roomarea");
            return (Criteria) this;
        }

        public Criteria andRoomareaNotBetween(Long value1, Long value2) {
            addCriterion("roomarea not between", value1, value2, "roomarea");
            return (Criteria) this;
        }

        public Criteria andRoomcodeIsNull() {
            addCriterion("roomcode is null");
            return (Criteria) this;
        }

        public Criteria andRoomcodeIsNotNull() {
            addCriterion("roomcode is not null");
            return (Criteria) this;
        }

        public Criteria andRoomcodeEqualTo(String value) {
            addCriterion("roomcode =", value, "roomcode");
            return (Criteria) this;
        }

        public Criteria andRoomcodeNotEqualTo(String value) {
            addCriterion("roomcode <>", value, "roomcode");
            return (Criteria) this;
        }

        public Criteria andRoomcodeGreaterThan(String value) {
            addCriterion("roomcode >", value, "roomcode");
            return (Criteria) this;
        }

        public Criteria andRoomcodeGreaterThanOrEqualTo(String value) {
            addCriterion("roomcode >=", value, "roomcode");
            return (Criteria) this;
        }

        public Criteria andRoomcodeLessThan(String value) {
            addCriterion("roomcode <", value, "roomcode");
            return (Criteria) this;
        }

        public Criteria andRoomcodeLessThanOrEqualTo(String value) {
            addCriterion("roomcode <=", value, "roomcode");
            return (Criteria) this;
        }

        public Criteria andRoomcodeLike(String value) {
            addCriterion("roomcode like", value, "roomcode");
            return (Criteria) this;
        }

        public Criteria andRoomcodeNotLike(String value) {
            addCriterion("roomcode not like", value, "roomcode");
            return (Criteria) this;
        }

        public Criteria andRoomcodeIn(List<String> values) {
            addCriterion("roomcode in", values, "roomcode");
            return (Criteria) this;
        }

        public Criteria andRoomcodeNotIn(List<String> values) {
            addCriterion("roomcode not in", values, "roomcode");
            return (Criteria) this;
        }

        public Criteria andRoomcodeBetween(String value1, String value2) {
            addCriterion("roomcode between", value1, value2, "roomcode");
            return (Criteria) this;
        }

        public Criteria andRoomcodeNotBetween(String value1, String value2) {
            addCriterion("roomcode not between", value1, value2, "roomcode");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table room
     *
     * @mbggenerated do_not_delete_during_merge Sun Jun 07 17:07:39 CST 2020
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table room
     *
     * @mbggenerated Sun Jun 07 17:07:39 CST 2020
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}