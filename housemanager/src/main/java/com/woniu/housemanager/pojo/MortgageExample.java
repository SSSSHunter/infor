package com.woniu.housemanager.pojo;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class MortgageExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table mortgage
     *
     * @mbggenerated Sun Jun 07 17:07:39 CST 2020
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table mortgage
     *
     * @mbggenerated Sun Jun 07 17:07:39 CST 2020
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table mortgage
     *
     * @mbggenerated Sun Jun 07 17:07:39 CST 2020
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mortgage
     *
     * @mbggenerated Sun Jun 07 17:07:39 CST 2020
     */
    public MortgageExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mortgage
     *
     * @mbggenerated Sun Jun 07 17:07:39 CST 2020
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mortgage
     *
     * @mbggenerated Sun Jun 07 17:07:39 CST 2020
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mortgage
     *
     * @mbggenerated Sun Jun 07 17:07:39 CST 2020
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mortgage
     *
     * @mbggenerated Sun Jun 07 17:07:39 CST 2020
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mortgage
     *
     * @mbggenerated Sun Jun 07 17:07:39 CST 2020
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mortgage
     *
     * @mbggenerated Sun Jun 07 17:07:39 CST 2020
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mortgage
     *
     * @mbggenerated Sun Jun 07 17:07:39 CST 2020
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mortgage
     *
     * @mbggenerated Sun Jun 07 17:07:39 CST 2020
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mortgage
     *
     * @mbggenerated Sun Jun 07 17:07:39 CST 2020
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mortgage
     *
     * @mbggenerated Sun Jun 07 17:07:39 CST 2020
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table mortgage
     *
     * @mbggenerated Sun Jun 07 17:07:39 CST 2020
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andMortgageidIsNull() {
            addCriterion("mortgageid is null");
            return (Criteria) this;
        }

        public Criteria andMortgageidIsNotNull() {
            addCriterion("mortgageid is not null");
            return (Criteria) this;
        }

        public Criteria andMortgageidEqualTo(Integer value) {
            addCriterion("mortgageid =", value, "mortgageid");
            return (Criteria) this;
        }

        public Criteria andMortgageidNotEqualTo(Integer value) {
            addCriterion("mortgageid <>", value, "mortgageid");
            return (Criteria) this;
        }

        public Criteria andMortgageidGreaterThan(Integer value) {
            addCriterion("mortgageid >", value, "mortgageid");
            return (Criteria) this;
        }

        public Criteria andMortgageidGreaterThanOrEqualTo(Integer value) {
            addCriterion("mortgageid >=", value, "mortgageid");
            return (Criteria) this;
        }

        public Criteria andMortgageidLessThan(Integer value) {
            addCriterion("mortgageid <", value, "mortgageid");
            return (Criteria) this;
        }

        public Criteria andMortgageidLessThanOrEqualTo(Integer value) {
            addCriterion("mortgageid <=", value, "mortgageid");
            return (Criteria) this;
        }

        public Criteria andMortgageidIn(List<Integer> values) {
            addCriterion("mortgageid in", values, "mortgageid");
            return (Criteria) this;
        }

        public Criteria andMortgageidNotIn(List<Integer> values) {
            addCriterion("mortgageid not in", values, "mortgageid");
            return (Criteria) this;
        }

        public Criteria andMortgageidBetween(Integer value1, Integer value2) {
            addCriterion("mortgageid between", value1, value2, "mortgageid");
            return (Criteria) this;
        }

        public Criteria andMortgageidNotBetween(Integer value1, Integer value2) {
            addCriterion("mortgageid not between", value1, value2, "mortgageid");
            return (Criteria) this;
        }

        public Criteria andHiidIsNull() {
            addCriterion("hiid is null");
            return (Criteria) this;
        }

        public Criteria andHiidIsNotNull() {
            addCriterion("hiid is not null");
            return (Criteria) this;
        }

        public Criteria andHiidEqualTo(Integer value) {
            addCriterion("hiid =", value, "hiid");
            return (Criteria) this;
        }

        public Criteria andHiidNotEqualTo(Integer value) {
            addCriterion("hiid <>", value, "hiid");
            return (Criteria) this;
        }

        public Criteria andHiidGreaterThan(Integer value) {
            addCriterion("hiid >", value, "hiid");
            return (Criteria) this;
        }

        public Criteria andHiidGreaterThanOrEqualTo(Integer value) {
            addCriterion("hiid >=", value, "hiid");
            return (Criteria) this;
        }

        public Criteria andHiidLessThan(Integer value) {
            addCriterion("hiid <", value, "hiid");
            return (Criteria) this;
        }

        public Criteria andHiidLessThanOrEqualTo(Integer value) {
            addCriterion("hiid <=", value, "hiid");
            return (Criteria) this;
        }

        public Criteria andHiidIn(List<Integer> values) {
            addCriterion("hiid in", values, "hiid");
            return (Criteria) this;
        }

        public Criteria andHiidNotIn(List<Integer> values) {
            addCriterion("hiid not in", values, "hiid");
            return (Criteria) this;
        }

        public Criteria andHiidBetween(Integer value1, Integer value2) {
            addCriterion("hiid between", value1, value2, "hiid");
            return (Criteria) this;
        }

        public Criteria andHiidNotBetween(Integer value1, Integer value2) {
            addCriterion("hiid not between", value1, value2, "hiid");
            return (Criteria) this;
        }

        public Criteria andDebtIsNull() {
            addCriterion("debt is null");
            return (Criteria) this;
        }

        public Criteria andDebtIsNotNull() {
            addCriterion("debt is not null");
            return (Criteria) this;
        }

        public Criteria andDebtEqualTo(Integer value) {
            addCriterion("debt =", value, "debt");
            return (Criteria) this;
        }

        public Criteria andDebtNotEqualTo(Integer value) {
            addCriterion("debt <>", value, "debt");
            return (Criteria) this;
        }

        public Criteria andDebtGreaterThan(Integer value) {
            addCriterion("debt >", value, "debt");
            return (Criteria) this;
        }

        public Criteria andDebtGreaterThanOrEqualTo(Integer value) {
            addCriterion("debt >=", value, "debt");
            return (Criteria) this;
        }

        public Criteria andDebtLessThan(Integer value) {
            addCriterion("debt <", value, "debt");
            return (Criteria) this;
        }

        public Criteria andDebtLessThanOrEqualTo(Integer value) {
            addCriterion("debt <=", value, "debt");
            return (Criteria) this;
        }

        public Criteria andDebtIn(List<Integer> values) {
            addCriterion("debt in", values, "debt");
            return (Criteria) this;
        }

        public Criteria andDebtNotIn(List<Integer> values) {
            addCriterion("debt not in", values, "debt");
            return (Criteria) this;
        }

        public Criteria andDebtBetween(Integer value1, Integer value2) {
            addCriterion("debt between", value1, value2, "debt");
            return (Criteria) this;
        }

        public Criteria andDebtNotBetween(Integer value1, Integer value2) {
            addCriterion("debt not between", value1, value2, "debt");
            return (Criteria) this;
        }

        public Criteria andBdidIsNull() {
            addCriterion("bdid is null");
            return (Criteria) this;
        }

        public Criteria andBdidIsNotNull() {
            addCriterion("bdid is not null");
            return (Criteria) this;
        }

        public Criteria andBdidEqualTo(Integer value) {
            addCriterion("bdid =", value, "bdid");
            return (Criteria) this;
        }

        public Criteria andBdidNotEqualTo(Integer value) {
            addCriterion("bdid <>", value, "bdid");
            return (Criteria) this;
        }

        public Criteria andBdidGreaterThan(Integer value) {
            addCriterion("bdid >", value, "bdid");
            return (Criteria) this;
        }

        public Criteria andBdidGreaterThanOrEqualTo(Integer value) {
            addCriterion("bdid >=", value, "bdid");
            return (Criteria) this;
        }

        public Criteria andBdidLessThan(Integer value) {
            addCriterion("bdid <", value, "bdid");
            return (Criteria) this;
        }

        public Criteria andBdidLessThanOrEqualTo(Integer value) {
            addCriterion("bdid <=", value, "bdid");
            return (Criteria) this;
        }

        public Criteria andBdidIn(List<Integer> values) {
            addCriterion("bdid in", values, "bdid");
            return (Criteria) this;
        }

        public Criteria andBdidNotIn(List<Integer> values) {
            addCriterion("bdid not in", values, "bdid");
            return (Criteria) this;
        }

        public Criteria andBdidBetween(Integer value1, Integer value2) {
            addCriterion("bdid between", value1, value2, "bdid");
            return (Criteria) this;
        }

        public Criteria andBdidNotBetween(Integer value1, Integer value2) {
            addCriterion("bdid not between", value1, value2, "bdid");
            return (Criteria) this;
        }

        public Criteria andCheckidIsNull() {
            addCriterion("checkid is null");
            return (Criteria) this;
        }

        public Criteria andCheckidIsNotNull() {
            addCriterion("checkid is not null");
            return (Criteria) this;
        }

        public Criteria andCheckidEqualTo(Integer value) {
            addCriterion("checkid =", value, "checkid");
            return (Criteria) this;
        }

        public Criteria andCheckidNotEqualTo(Integer value) {
            addCriterion("checkid <>", value, "checkid");
            return (Criteria) this;
        }

        public Criteria andCheckidGreaterThan(Integer value) {
            addCriterion("checkid >", value, "checkid");
            return (Criteria) this;
        }

        public Criteria andCheckidGreaterThanOrEqualTo(Integer value) {
            addCriterion("checkid >=", value, "checkid");
            return (Criteria) this;
        }

        public Criteria andCheckidLessThan(Integer value) {
            addCriterion("checkid <", value, "checkid");
            return (Criteria) this;
        }

        public Criteria andCheckidLessThanOrEqualTo(Integer value) {
            addCriterion("checkid <=", value, "checkid");
            return (Criteria) this;
        }

        public Criteria andCheckidIn(List<Integer> values) {
            addCriterion("checkid in", values, "checkid");
            return (Criteria) this;
        }

        public Criteria andCheckidNotIn(List<Integer> values) {
            addCriterion("checkid not in", values, "checkid");
            return (Criteria) this;
        }

        public Criteria andCheckidBetween(Integer value1, Integer value2) {
            addCriterion("checkid between", value1, value2, "checkid");
            return (Criteria) this;
        }

        public Criteria andCheckidNotBetween(Integer value1, Integer value2) {
            addCriterion("checkid not between", value1, value2, "checkid");
            return (Criteria) this;
        }

        public Criteria andMortgagemoneyIsNull() {
            addCriterion("mortgagemoney is null");
            return (Criteria) this;
        }

        public Criteria andMortgagemoneyIsNotNull() {
            addCriterion("mortgagemoney is not null");
            return (Criteria) this;
        }

        public Criteria andMortgagemoneyEqualTo(BigDecimal value) {
            addCriterion("mortgagemoney =", value, "mortgagemoney");
            return (Criteria) this;
        }

        public Criteria andMortgagemoneyNotEqualTo(BigDecimal value) {
            addCriterion("mortgagemoney <>", value, "mortgagemoney");
            return (Criteria) this;
        }

        public Criteria andMortgagemoneyGreaterThan(BigDecimal value) {
            addCriterion("mortgagemoney >", value, "mortgagemoney");
            return (Criteria) this;
        }

        public Criteria andMortgagemoneyGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("mortgagemoney >=", value, "mortgagemoney");
            return (Criteria) this;
        }

        public Criteria andMortgagemoneyLessThan(BigDecimal value) {
            addCriterion("mortgagemoney <", value, "mortgagemoney");
            return (Criteria) this;
        }

        public Criteria andMortgagemoneyLessThanOrEqualTo(BigDecimal value) {
            addCriterion("mortgagemoney <=", value, "mortgagemoney");
            return (Criteria) this;
        }

        public Criteria andMortgagemoneyIn(List<BigDecimal> values) {
            addCriterion("mortgagemoney in", values, "mortgagemoney");
            return (Criteria) this;
        }

        public Criteria andMortgagemoneyNotIn(List<BigDecimal> values) {
            addCriterion("mortgagemoney not in", values, "mortgagemoney");
            return (Criteria) this;
        }

        public Criteria andMortgagemoneyBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("mortgagemoney between", value1, value2, "mortgagemoney");
            return (Criteria) this;
        }

        public Criteria andMortgagemoneyNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("mortgagemoney not between", value1, value2, "mortgagemoney");
            return (Criteria) this;
        }

        public Criteria andMortgagescopeIsNull() {
            addCriterion("mortgagescope is null");
            return (Criteria) this;
        }

        public Criteria andMortgagescopeIsNotNull() {
            addCriterion("mortgagescope is not null");
            return (Criteria) this;
        }

        public Criteria andMortgagescopeEqualTo(String value) {
            addCriterion("mortgagescope =", value, "mortgagescope");
            return (Criteria) this;
        }

        public Criteria andMortgagescopeNotEqualTo(String value) {
            addCriterion("mortgagescope <>", value, "mortgagescope");
            return (Criteria) this;
        }

        public Criteria andMortgagescopeGreaterThan(String value) {
            addCriterion("mortgagescope >", value, "mortgagescope");
            return (Criteria) this;
        }

        public Criteria andMortgagescopeGreaterThanOrEqualTo(String value) {
            addCriterion("mortgagescope >=", value, "mortgagescope");
            return (Criteria) this;
        }

        public Criteria andMortgagescopeLessThan(String value) {
            addCriterion("mortgagescope <", value, "mortgagescope");
            return (Criteria) this;
        }

        public Criteria andMortgagescopeLessThanOrEqualTo(String value) {
            addCriterion("mortgagescope <=", value, "mortgagescope");
            return (Criteria) this;
        }

        public Criteria andMortgagescopeLike(String value) {
            addCriterion("mortgagescope like", value, "mortgagescope");
            return (Criteria) this;
        }

        public Criteria andMortgagescopeNotLike(String value) {
            addCriterion("mortgagescope not like", value, "mortgagescope");
            return (Criteria) this;
        }

        public Criteria andMortgagescopeIn(List<String> values) {
            addCriterion("mortgagescope in", values, "mortgagescope");
            return (Criteria) this;
        }

        public Criteria andMortgagescopeNotIn(List<String> values) {
            addCriterion("mortgagescope not in", values, "mortgagescope");
            return (Criteria) this;
        }

        public Criteria andMortgagescopeBetween(String value1, String value2) {
            addCriterion("mortgagescope between", value1, value2, "mortgagescope");
            return (Criteria) this;
        }

        public Criteria andMortgagescopeNotBetween(String value1, String value2) {
            addCriterion("mortgagescope not between", value1, value2, "mortgagescope");
            return (Criteria) this;
        }

        public Criteria andMortgagestartIsNull() {
            addCriterion("mortgagestart is null");
            return (Criteria) this;
        }

        public Criteria andMortgagestartIsNotNull() {
            addCriterion("mortgagestart is not null");
            return (Criteria) this;
        }

        public Criteria andMortgagestartEqualTo(Date value) {
            addCriterionForJDBCDate("mortgagestart =", value, "mortgagestart");
            return (Criteria) this;
        }

        public Criteria andMortgagestartNotEqualTo(Date value) {
            addCriterionForJDBCDate("mortgagestart <>", value, "mortgagestart");
            return (Criteria) this;
        }

        public Criteria andMortgagestartGreaterThan(Date value) {
            addCriterionForJDBCDate("mortgagestart >", value, "mortgagestart");
            return (Criteria) this;
        }

        public Criteria andMortgagestartGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("mortgagestart >=", value, "mortgagestart");
            return (Criteria) this;
        }

        public Criteria andMortgagestartLessThan(Date value) {
            addCriterionForJDBCDate("mortgagestart <", value, "mortgagestart");
            return (Criteria) this;
        }

        public Criteria andMortgagestartLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("mortgagestart <=", value, "mortgagestart");
            return (Criteria) this;
        }

        public Criteria andMortgagestartIn(List<Date> values) {
            addCriterionForJDBCDate("mortgagestart in", values, "mortgagestart");
            return (Criteria) this;
        }

        public Criteria andMortgagestartNotIn(List<Date> values) {
            addCriterionForJDBCDate("mortgagestart not in", values, "mortgagestart");
            return (Criteria) this;
        }

        public Criteria andMortgagestartBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("mortgagestart between", value1, value2, "mortgagestart");
            return (Criteria) this;
        }

        public Criteria andMortgagestartNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("mortgagestart not between", value1, value2, "mortgagestart");
            return (Criteria) this;
        }

        public Criteria andMortgageendIsNull() {
            addCriterion("mortgageend is null");
            return (Criteria) this;
        }

        public Criteria andMortgageendIsNotNull() {
            addCriterion("mortgageend is not null");
            return (Criteria) this;
        }

        public Criteria andMortgageendEqualTo(Date value) {
            addCriterionForJDBCDate("mortgageend =", value, "mortgageend");
            return (Criteria) this;
        }

        public Criteria andMortgageendNotEqualTo(Date value) {
            addCriterionForJDBCDate("mortgageend <>", value, "mortgageend");
            return (Criteria) this;
        }

        public Criteria andMortgageendGreaterThan(Date value) {
            addCriterionForJDBCDate("mortgageend >", value, "mortgageend");
            return (Criteria) this;
        }

        public Criteria andMortgageendGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("mortgageend >=", value, "mortgageend");
            return (Criteria) this;
        }

        public Criteria andMortgageendLessThan(Date value) {
            addCriterionForJDBCDate("mortgageend <", value, "mortgageend");
            return (Criteria) this;
        }

        public Criteria andMortgageendLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("mortgageend <=", value, "mortgageend");
            return (Criteria) this;
        }

        public Criteria andMortgageendIn(List<Date> values) {
            addCriterionForJDBCDate("mortgageend in", values, "mortgageend");
            return (Criteria) this;
        }

        public Criteria andMortgageendNotIn(List<Date> values) {
            addCriterionForJDBCDate("mortgageend not in", values, "mortgageend");
            return (Criteria) this;
        }

        public Criteria andMortgageendBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("mortgageend between", value1, value2, "mortgageend");
            return (Criteria) this;
        }

        public Criteria andMortgageendNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("mortgageend not between", value1, value2, "mortgageend");
            return (Criteria) this;
        }

        public Criteria andMortgagecodeIsNull() {
            addCriterion("mortgagecode is null");
            return (Criteria) this;
        }

        public Criteria andMortgagecodeIsNotNull() {
            addCriterion("mortgagecode is not null");
            return (Criteria) this;
        }

        public Criteria andMortgagecodeEqualTo(String value) {
            addCriterion("mortgagecode =", value, "mortgagecode");
            return (Criteria) this;
        }

        public Criteria andMortgagecodeNotEqualTo(String value) {
            addCriterion("mortgagecode <>", value, "mortgagecode");
            return (Criteria) this;
        }

        public Criteria andMortgagecodeGreaterThan(String value) {
            addCriterion("mortgagecode >", value, "mortgagecode");
            return (Criteria) this;
        }

        public Criteria andMortgagecodeGreaterThanOrEqualTo(String value) {
            addCriterion("mortgagecode >=", value, "mortgagecode");
            return (Criteria) this;
        }

        public Criteria andMortgagecodeLessThan(String value) {
            addCriterion("mortgagecode <", value, "mortgagecode");
            return (Criteria) this;
        }

        public Criteria andMortgagecodeLessThanOrEqualTo(String value) {
            addCriterion("mortgagecode <=", value, "mortgagecode");
            return (Criteria) this;
        }

        public Criteria andMortgagecodeLike(String value) {
            addCriterion("mortgagecode like", value, "mortgagecode");
            return (Criteria) this;
        }

        public Criteria andMortgagecodeNotLike(String value) {
            addCriterion("mortgagecode not like", value, "mortgagecode");
            return (Criteria) this;
        }

        public Criteria andMortgagecodeIn(List<String> values) {
            addCriterion("mortgagecode in", values, "mortgagecode");
            return (Criteria) this;
        }

        public Criteria andMortgagecodeNotIn(List<String> values) {
            addCriterion("mortgagecode not in", values, "mortgagecode");
            return (Criteria) this;
        }

        public Criteria andMortgagecodeBetween(String value1, String value2) {
            addCriterion("mortgagecode between", value1, value2, "mortgagecode");
            return (Criteria) this;
        }

        public Criteria andMortgagecodeNotBetween(String value1, String value2) {
            addCriterion("mortgagecode not between", value1, value2, "mortgagecode");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table mortgage
     *
     * @mbggenerated do_not_delete_during_merge Sun Jun 07 17:07:39 CST 2020
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table mortgage
     *
     * @mbggenerated Sun Jun 07 17:07:39 CST 2020
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}